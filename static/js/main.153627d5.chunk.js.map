{"version":3,"sources":["components/Header.jsx","views/LoginView.jsx","views/ForgotPassword.jsx","views/VerifyForgottenPassword.jsx","views/RegisterView.jsx","views/VerifyRegistrationView.jsx","views/ProjectsView.jsx","views/ProjectView.jsx","components/WritableArea.jsx","views/EditorView.jsx","sandbox/auth/auth.js","mocks/dummyData.js","core/ajax.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleLogoutClick","_callee","event","err","regenerator_default","a","wrap","_context","prev","next","_this","props","sb","auth","logOut","sent","console","log","setAuthStatus","setUser","t0","message","stop","getLogout","state","isAuthenticated","react_default","createElement","href","onClick","this","user","username","className","viewName","React","Component","INVERSE_PROP","password","LoginView","errors","cognito","blankfield","handleInputChange","_this$setState","target","value","id","setState","Object","defineProperty","objectSpread","handleSubmit","_this$state","preventDefault","logIn","app","history","push","Fragment","Header_Header","assign","action","type","onChange","placeholder","disabled","ForgotPassword","passwordMatch","registerClicked","signUpResponse","Auth","forgotPassword","VerifyForgottenPassword","code","confirmPassword","resetPasswordResponse","forgotPasswordSubmit","email","RegisterView","validEmail","i","len","length","isFormValid","signUp","attributes","test","VerifyRegistrationView","ProjectsView","isFetching","projects","ajax","getProjects","map","item","key","name","react_router_dom","to","ProjectView","projectId","projectFiles","match","params","getProjectFiles","_this2","WritableArea","textContent","EditorView","content","fileName","handleKeystroke","e","altKey","ctrlKey","metaKey","deleteCharacter","addCharacter","currentStateContent","fileId","getFileData","fileData","getFileContent","asset_url","document","addEventListener","removeEventListener","substring","WritableArea_WritableArea","Authenticator","config","classCallCheck","signIn","signOut","currentSession","currentAuthenticatedUser","isLoggedIn","loggedIn","SERVER_DATA","get","created_at","word_count","files","aws/folder/file1.txt","aws/folder/file2.txt","aws/folder/file3.txt","aws/folder/file4.txt","aws/folder/file5.txt","aws/folder/file6.txt","Promise","resolve","reject","setTimeout","filter","index","projectFile","App","possibleConstructorReturn","getPrototypeOf","call","isAuthenticating","sessionToken","configureSandbox","setAuthState","authState","authStatus","sandbox","setSessionToken","token","getSession","session","isValid","getIdToken","getJwtToken","_this3","react_router","exact","path","render","LoginView_LoginView","ForgotPassword_ForgotPassword","VerifyForgottenPassword_VerifyForgottenPassword","RegisterView_RegisterView","VerifyRegistrationView_VerifyRegistrationView","ProjectsView_ProjectsView","ProjectView_ProjectView","EditorView_EditorView","Boolean","window","location","hostname","Amplify","configure","mandatorySignId","region","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.153627d5.chunk.js","sourcesContent":["import React from 'react'\n\n// TODO: User preferences/settings, dropdown menu?\n\nclass Header extends React.Component {\n    handleLogoutClick = async event => {\n        try {\n            const user = await this.props.sb.auth.logOut();\n            console.log(this.props)\n\n            this.props.sb.setAuthStatus(false)\n            this.props.sb.setUser(null)\n        }\n\n        catch (error) {\n            let err = null\n            !error.message ? err = { \"message\": error } :  err = error\n\n            console.log('error', err)\n        }\n    }\n\n    getLogout = () => {\n        if (this.props.sb.state.auth.isAuthenticated) {\n            return (\n                <a href=\"\" onClick={this.handleLogoutClick}>Log Out</a>\n            )\n        }\n\n        return\n    }\n\n    getUser () {\n        if (this.props.sb.state.auth.isAuthenticated) {\n            return (\n                <span>{this.props.sb.state.auth.user.username}</span>\n            )\n        }\n\n        return\n    }\n\n    render () {\n        return (\n            <header className={\"app-header app-header-\" + this.props.viewName}>\n                <div className='app-title'>Just Draft</div>\n                {this.getLogout()}\n                {/* {this.getUser()} */}\n            </header>\n        )\n    }\n}\n\nexport { Header }","import React from \"react\"\n\nimport { Header } from \"../components/Header\"\n\nimport \"../static/css/LoginView.css\"\n\nconst INVERSE_PROP = {\n  username: \"password\",\n  password: \"username\"\n}\n\nclass LoginView extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: true\n    }\n  }\n\n  handleInputChange = event => {\n    let blankfield = true\n\n    if (event.target.value && this.state[INVERSE_PROP[event.target.id]]) {\n      blankfield = false\n    }\n\n    this.setState({\n      [event.target.id]: event.target.value,\n      errors: {\n        ...this.state.errors,\n        blankfield\n      }\n    })\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault()\n    const { username, password } = this.state\n\n    try {\n      const user = await this.props.sb.auth.logIn(username, password);\n\n      this.props.sb.app.setAuthStatus(true)\n      this.props.sb.app.setUser(user)\n\n      // this.props.sb.ajax.get('user', {userId: user.attributes.sub})\n      // this.props.history.push(\"/projects\")\n    } catch (error) {\n      let err = null\n      !error.message ? (err = { message: error }) : (err = error)\n\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      })\n      console.log(\"error\", this.state)\n    }\n  }\n\n  render() {\n    if (this.props.sb.state.auth.isAuthenticated) {\n        this.props.history.push('/projects')\n        return null\n    }\n    return (\n      <React.Fragment>\n        <div className=\"login-view-container\">\n          <Header {...this.props} viewName=\"LoginView\" />\n          <div className=\"LoginView\">\n            <form action=\"\">\n              <input\n                id=\"username\"\n                type=\"text\"\n                onChange={this.handleInputChange}\n                placeholder=\"Username\"\n              />\n              <input\n                id=\"password\"\n                type=\"password\"\n                onChange={this.handleInputChange}\n                placeholder=\"Password\"\n              />\n              <input\n                type=\"submit\"\n                disabled={this.state.errors.blankfield ? \"disabled\" : \"\"}\n                onClick={this.handleSubmit}\n                value=\"Login\"\n              />\n            </form>\n            <a href=\"/forgotpassword\">Forgot Password?</a>\n            <br />\n            <br />\n            Need an account?<br />\n            <a href=\"/register\">Click here</a> to register.\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport { LoginView }\n","import React from 'react'\nimport { Auth } from 'aws-amplify'\n\nimport { Header } from '../components/Header'\n\nimport '../static/css/ForgotPassword.css'\n\nclass ForgotPassword extends React.Component {\n    state = {\n        username: '',\n        errors: {\n            cognito: null,\n            blankfield: false,\n            passwordMatch: false\n        }\n    }\n\n    handleInputChange = event => {\n        // error checking and validation goes here\n        \n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    registerClicked = async () => {\n        const { username } = this.state\n\n        try {\n            const signUpResponse = await Auth.forgotPassword(username)\n            console.log(signUpResponse)\n            this.props.history.push('/verifyforgottenpassword')\n        }\n\n        catch (error) {\n            let err = null\n            !error.message ? err = { \"message\": error } :  err = error\n\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    cognito: err\n                }\n            })\n            console.log(this.state)\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"ForgotPassword\">\n                    <h2>Forgot Password</h2>\n                    <input type=\"text\" id=\"username\" onChange={ this.handleInputChange } placeholder=\"Enter Username\"/>\n                    <button onClick={this.registerClicked}>Submit</button>\n                    Or, <a href=\"/login\">click here</a> to log in.\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport { ForgotPassword }","import React from 'react'\nimport { Auth } from 'aws-amplify'\n\nimport { Header } from '../components/Header'\n\nimport '../static/css/VerifyForgottenPassword.css'\n\nclass VerifyForgottenPassword extends React.Component {\n    state = {\n        username: '',\n        code: '',\n        password: '',\n        confirmPassword: '',\n        errors: {\n            cognito: null,\n            blankfield: false,\n            passwordMatch: false\n        }\n    }\n\n    handleInputChange = event => {\n        // error checking and validation goes here\n        \n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    registerClicked = async () => {\n        const { username, code, password } = this.state\n\n        try {\n            const resetPasswordResponse = await Auth.forgotPasswordSubmit(username, code, password)\n            console.log(resetPasswordResponse)\n            this.props.history.push('/login')\n        }\n\n        catch (error) {\n            let err = null\n            !error.message ? err = { \"message\": error } :  err = error\n\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    cognito: err\n                }\n            })\n            console.log(this.state)\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"VerifyForgottenPassword\">\n                    <h2>Create New Password</h2>\n                    <input type=\"text\" id=\"code\" onChange={ this.handleInputChange } placeholder=\"Enter Code\"/>\n                    <input type=\"text\" id=\"username\" onChange={ this.handleInputChange } placeholder=\"Enter Username\"/>\n                    <input type=\"password\" id=\"password\" onChange={ this.handleInputChange } placeholder=\"New Password\"/>\n                    <input type=\"password\" id=\"confirmPassword\" onChange={ this.handleInputChange } placeholder=\"Confirm New Password\"/>\n                    <button onClick={this.registerClicked}>Submit</button>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport { VerifyForgottenPassword }","import React from 'react'\n\nimport { Auth } from 'aws-amplify'\n\nimport { Header } from '../components/Header'\nimport '../static/css/RegisterView.css'\nimport { ConsoleLogger } from '@aws-amplify/core';\n\nconst PASSWORD_INVERSE_PROP = {\n    password: 'confirmPassword',\n    confirmPassword: 'password'\n}\n\nconst INVERSE_PROP = {\n    username: [\n        'email',\n        'password',\n        'confirmPassword'\n    ],\n    email: [\n        'username',\n        'password',\n        'confirmPassword'\n    ],\n    password: [\n        'username',\n        'email',\n        'confirmPassword'\n    ],\n    confirmPassword: [\n        'username',\n        'email',\n        'password'\n    ],\n}\n\nclass RegisterView extends React.Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        errors: {\n            cognito: null,\n            blankfield: true,\n            passwordMatch: true,\n            validEmail: true\n        }\n    }\n\n    handleInputChange = event => {\n        // error checking and validation goes here\n        let blankfield = true\n        // let passwordMatch = false\n        // let validEmail = false\n\n        if (event.target.value) {\n            for (let i=0, len=INVERSE_PROP[event.target.id].length;i<len;i++) {\n                if (!this.state[INVERSE_PROP[event.target.id][i]]) {\n                    blankfield = true\n                    break\n                } else {\n                    blankfield = false\n                }\n            }\n        }\n\n        this.setState({\n            [event.target.id]: event.target.value,\n            errors: {\n                ...this.state.errors,\n                blankfield\n            }\n        })\n    }\n\n    isMatchedPassword () {\n        let passwordMatch = false\n\n        if (this.state.password === this.state.confirmPassword) {\n            passwordMatch = true\n        }\n\n        this.setState({\n            ...this.state,\n            errors: {\n                ...this.state.errors,\n                passwordMatch\n            }\n        })\n\n        return passwordMatch\n    }\n\n    isValidEmail () {\n        let validEmail = false\n\n        if (/\\S+@\\S+\\.\\S+/.test(this.state.email)) {\n            validEmail = true\n        }\n\n        this.setState({\n            ...this.state,\n            errors: {\n                ...this.state.errors,\n                validEmail\n            }\n        })\n\n        return validEmail\n    }\n\n    isFormValid () {\n        let passwordMatch = false\n        let validEmail = false\n\n        if (this.state.password === this.state.confirmPassword) {\n            passwordMatch = true\n        }\n\n        if (/\\S+@\\S+\\.\\S+/.test(this.state.email)) {\n            validEmail = true\n        }\n\n        this.setState({\n            ...this.state,\n            errors: {\n                ...this.state.errors,\n                passwordMatch,\n                validEmail\n            }\n        })\n\n        return (passwordMatch && validEmail)\n    }\n\n    handleSubmit = async () => {\n\n        if (this.isFormValid()) {\n            const { username, email, password } = this.state\n\n            try {\n                const signUpResponse = await Auth.signUp({\n                    username,\n                    password,\n                    attributes: {\n                        email: email\n                    }\n                })\n                console.log(signUpResponse)\n                this.props.history.push('/register/success')\n            }\n\n            catch (error) {\n                let err = null\n                !error.message ? err = { \"message\": error } :  err = error\n\n                this.setState({\n                    errors: {\n                        ...this.state.errors,\n                        cognito: err\n                    }\n                })\n                console.log(this.state)\n            }\n        }\n    }\n    \n    render() {\n        if (this.props.sb.state.auth.isAuthenticated) {\n            this.props.history.push('/projects')\n        }\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"RegisterView\">\n                    <h2>Register</h2>\n                    <input type=\"text\" id=\"username\" onChange={ this.handleInputChange } placeholder=\"Username\"/>\n                    <input type=\"text\" className={!this.state.errors.validEmail ? 'invalid' : ''} id=\"email\" onChange={ this.handleInputChange } placeholder=\"Email\"/>\n                    <input type=\"password\" className={!this.state.errors.passwordMatch ? 'invalid' : ''} id=\"password\" onChange={ this.handleInputChange } placeholder=\"Password\"/>\n                    <input type=\"password\" className={!this.state.errors.passwordMatch ? 'invalid' : ''} id=\"confirmPassword\" onChange={ this.handleInputChange } placeholder=\"Confirm Password\"/>\n                    { !this.state.errors.validEmail ? <p className=\"error\">Invalid Email Address</p> : '' }\n                    { !this.state.errors.passwordMatch ? <p className=\"error\">Passwords do not match</p> : '' }\n                    <button disabled={this.state.errors.blankfield ? 'disabled' : ''} onClick={this.handleSubmit}>Register</button>\n                    Already a user? <a href=\"/login\">Click here</a> to log in.\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport { RegisterView }","import React from 'react'\n\nimport { Header } from '../components/Header'\n\nclass VerifyRegistrationView extends React.Component {\n    render () {\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"VerifyRegistrationView\">\n                    <p>Please check your email and click on the verification link we've sent to you.</p>\n                    <p>Then, <a href=\"/login\">click here</a> to log in.</p>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport { VerifyRegistrationView }","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { Header } from \"../components/Header\"\n\nimport \"../static/css/ProjectsView.css\"\n\nclass ProjectsView extends React.Component {\n  state = {\n    isFetching: true,\n    projects: []\n  }\n\n  async componentDidMount () {\n    try {\n      let projects = await this.props.sb.ajax.getProjects()\n\n      console.log(projects)\n\n      this.setState({\n        isFetching: false,\n        projects\n      })\n    } catch (err) {\n      console.log('Error: ', err)\n    }\n  }\n\n  render() {\n    if (!this.props.sb.state.auth.isAuthenticated) {\n        this.props.history.push('/login')\n    }\n\n    return (\n      <React.Fragment>\n        <Header {...this.props} viewName=\"ProjectsView\" />\n          <div className=\"ProjectsView\">\n            <h2>Your Projects</h2>\n            {!this.state.isFetching && (\n              <React.Fragment>\n                <ul>\n                  {this.state.projects.map((item, key) => {\n                    return (\n                      <li key={item.id}>\n                        {item.name}\n                        <Link to={'/projects/' + item.id}>View</Link>\n                      </li>\n                    )\n                  })}\n                </ul>\n                <button>New Project</button>\n              </React.Fragment>\n            )}\n          </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport { ProjectsView }\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { Header } from \"../components/Header\"\n\nimport \"../static/css/ProjectView.css\"\n\nclass ProjectView extends React.Component {\n  state = {\n    isFetching: true,\n    projectId: '',\n    projectFiles: []\n  }\n\n  async componentDidMount () {\n    try {\n      const projectId = this.props.match.params.id\n      let projectFiles = await this.props.sb.ajax.getProjectFiles(projectId)\n\n      console.log(projectFiles)\n\n      this.setState({\n        isFetching: false,\n        projectId,\n        projectFiles\n      })\n    } catch (err) {\n      console.log('Error: ', err)\n    }\n  }\n\n  render() {\n    if (!this.props.sb.state.auth.isAuthenticated) {\n        this.props.history.push('/login')\n    }\n    return (\n      <React.Fragment>\n        <Header {...this.props} />\n        <div className=\"ProjectView\">\n          <h2>My First Novel</h2>\n          {!this.state.isFetching && (\n            <React.Fragment>\n              <ul>\n                {this.state.projectFiles.map((item, key) => {\n                  return (\n                    <li key={item.id}>\n                      {item.name}\n                      <Link to={'/projects/' + this.state.projectId + '/edit/' + item.id}>Edit</Link>\n                    </li>\n                  )\n                })}\n              </ul>\n              <button>New File</button>\n            </React.Fragment>\n          )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport { ProjectView }\n","import React from 'react'\n\nclass WritableArea extends React.Component {\n    render () {\n        return (\n            <div className=\"writable-area\">\n                {this.props.textContent}\n            </div>\n        )\n    }\n}\n\nexport { WritableArea };","import React from \"react\"\n\nimport \"../static/css/EditorView.css\"\n\nimport { Header } from \"../components/Header\"\n\nimport { WritableArea } from \"../components/WritableArea\"\n// import { Downloader } from \"../components/Downloader\"\n\n// TODO: Cleanup, implement the return character, uploading, debnounce\n\nclass EditorView extends React.Component {\n  state = {\n    isFetching: true,\n    content: '',\n    fileName: ''\n  }\n\n  // Feels clunky\n  async componentDidMount () {\n    try {\n      const projectId = this.props.match.params.id\n      const fileId = this.props.match.params.fileId\n      \n      let fileData = await this.props.sb.ajax.getFileData(fileId)\n      let content = await this.props.sb.ajax.getFileContent(fileData[0].asset_url)\n\n      this.setState({\n        isFetching: false,\n        content: content.content,\n        fileName: fileData[0].name\n      })\n    } catch (err) {\n      console.log('Error: ', err)\n    }\n  }\n\n  componentWillMount () {\n    document.addEventListener(\"keydown\", this.handleKeystroke)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener(\"keydown\", this.handleKeystroke)\n  }\n\n  handleKeystroke = e => {\n    let key = e.key\n\n    if (key.length === 1 && (!e.altKey && !e.ctrlKey && !e.metaKey)) {\n      if (/[a-zA-z1-9.,/#!$%^&*;:{}=\\-_`~()@\\W]/.test(key)) {\n        this.addCharacter(key)\n      }\n    } else {\n      switch (key) {\n        case \"Backspace\":\n          e.preventDefault()\n          this.deleteCharacter()\n          break\n        case \"Enter\":\n          e.preventDefault()\n          // this.newParagraph()\n          break\n        default:\n      }\n    }\n  }\n\n  addCharacter = key => {\n    const currentStateContent = this.state.content\n\n    this.setState({\n      content: currentStateContent + key\n    })\n  }\n\n  deleteCharacter() {\n    const currentStateContent = this.state.content\n\n    this.setState({\n      content: currentStateContent.substring(0, currentStateContent.length - 1)\n    })\n  }\n\n  render() {\n    if (!this.props.sb.state.auth.isAuthenticated) {\n        this.props.history.push('/login')\n    }\n    return (\n      <React.Fragment>\n        <Header {...this.props} />\n        <div className=\"EditorView\">\n          {!this.state.isFetching && (\n            <React.Fragment>\n              <span>{this.state.fileName}</span>\n              <WritableArea textContent={this.state.content} />\n              {/* <Downloader textContent={this.state.content} /> */}\n            </React.Fragment>\n          )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport { EditorView }\n","import { Auth } from \"aws-amplify\"\n\n// Abstraction of the authentication methods\nclass Authenticator {\n  constructor(config) {\n    this.config = {}\n\n    if (config) {\n      this.config = config\n    }\n  }\n\n  static loggedIn = false\n\n  logIn(username, password) {\n    // login\n    return Auth.signIn(username, password)\n  }\n\n  logOut() {\n    // logout\n    return Auth.signOut()\n  }\n\n  getCurrentSession () {\n    return Auth.currentSession()\n  }\n\n  getAuthenticatedUser () {\n    return Auth.currentAuthenticatedUser()\n  }\n\n  isLoggedIn() {\n    return this.isLoggedIn\n  }\n}\n\nexport { Authenticator }\n","let SERVER_DATA = {\n    \"get\": {\n        \"projects\": [\n            {\n                \"name\": \"My First Novel\",\n                \"id\": \"12345\",\n                \"created_at\": \"Mon Aug 1 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\"\n            },\n            {\n                \"name\": \"NaNoWriMo\",\n                \"id\": \"67890\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\"\n            }\n        ],\n        \"projectFiles\": [\n            {\n                \"name\": \"Chapter One\",\n                \"projectId\": \"12345\",\n                \"id\": \"abcde\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\",\n                \"word_count\": 1200,\n                \"asset_url\": \"aws/folder/file1.txt\"\n            },\n            {\n                \"name\": \"Chapter Two\",\n                \"projectId\": \"12345\",\n                \"id\": \"fghij\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\",\n                \"word_count\": 1030,\n                \"asset_url\": \"aws/folder/file2.txt\"\n            },\n            {\n                \"name\": \"Chapter Three\",\n                \"projectId\": \"12345\",\n                \"id\": \"klmno\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\",\n                \"word_count\": 1200,\n                \"asset_url\": \"aws/folder/file3.txt\"\n            },\n            {\n                \"name\": \"Chapter Four\",\n                \"projectId\": \"12345\",\n                \"id\": \"pqrst\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\",\n                \"word_count\": 1030,\n                \"asset_url\": \"aws/folder/file4.txt\"\n            },\n            {\n                \"name\": \"Day One\",\n                \"projectId\": \"67890\",\n                \"id\": \"easy123\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\",\n                \"word_count\": 1200,\n                \"asset_url\": \"aws/folder/file5.txt\"\n            },\n            {\n                \"name\": \"Day Two\",\n                \"projectId\": \"67890\",\n                \"id\": \"hard456\",\n                \"created_at\": \"Mon Aug 12 2019 21:57:47 GMT-0400 (Eastern Daylight Time)\",\n                \"word_count\": 1030,\n                \"asset_url\": \"aws/folder/file6.txt\"\n            }\n        ],\n        \"files\": {\n            \"aws/folder/file1.txt\": {\n                \"content\": \"Once upon a time in a large forbidden forest.\"\n            },\n            \"aws/folder/file2.txt\": {\n                \"content\": \"The brave knight set out on his quest to rescue the fair princess.\"\n            },\n            \"aws/folder/file3.txt\": {\n                \"content\": \"The battle was fierce, and the knight did not come out unwounded, but slay the great beast, he did.\"\n            },\n            \"aws/folder/file4.txt\": {\n                \"content\": \"So the knight and the princess were wed, and the kingdom prospered, and the couple lived contentedly thereafter.\"\n            },\n            \"aws/folder/file5.txt\": {\n                \"content\": \"OMG I'm writing so much today--gotta get my word counts in!\"\n            },\n            \"aws/folder/file6.txt\": {\n                \"content\": \"Day two is far harder than day one. I'm already tired and want to quit. Oh, bother.\"\n            }\n        }\n    }\n}\n\nexport { SERVER_DATA }\n","import { SERVER_DATA } from '../mocks/dummyData'\n\n// TODO: Return consistent mock server responses\n// TODO: Implement the API in Lambda/API Gateway\n\nlet ajax = {\n    getProjects: () => {\n        return new Promise(function(resolve, reject) {\n            setTimeout(function() {\n                resolve(SERVER_DATA.get.projects);\n            }, 300);\n        });\n    },\n\n    getProjectFiles: (projectId) => {\n        return new Promise(function(resolve, reject) {\n            setTimeout(function() {\n                const projectFiles = SERVER_DATA.get.projectFiles.filter((item, index) => {\n                    return item.projectId === projectId\n                })\n                resolve(projectFiles);\n            }, 300);\n        });\n    },\n\n    getFileData: (fileId) => {\n        return new Promise(function(resolve, reject) {\n            setTimeout(function() {\n                const projectFile = SERVER_DATA.get.projectFiles.filter((item, index) => {\n                    return item.id === fileId\n                })\n                resolve(projectFile);\n            }, 300);\n        });\n    },\n\n    getFileContent: (fileName) => {\n        return new Promise(function(resolve, reject) {\n            setTimeout(function() {\n                resolve(SERVER_DATA.get.files[fileName]);\n            }, 300);\n        });\n    }\n}\n\nexport { ajax }","import React from \"react\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Route, Switch } from \"react-router\"\n\nimport { Auth } from \"aws-amplify\"\n\nimport \"./static/css/App.css\"\n\nimport { LoginView } from \"./views/LoginView\"\nimport { ForgotPassword } from \"./views/ForgotPassword\"\nimport { VerifyForgottenPassword } from \"./views/VerifyForgottenPassword\"\n\nimport { RegisterView } from \"./views/RegisterView\"\nimport { VerifyRegistrationView } from \"./views/VerifyRegistrationView\"\n\nimport { ProjectsView } from \"./views/ProjectsView\"\nimport { ProjectView } from \"./views/ProjectView\"\nimport { EditorView } from \"./views/EditorView\"\n\nimport { Authenticator } from './sandbox/auth/auth'\n\nimport { ajax } from './core/ajax'\n\nconst auth = new Authenticator({})\n\nclass App extends React.Component {\n  state = {\n    auth: {\n      isAuthenticated: false,\n      isAuthenticating: true,\n      user: null,\n      sessionToken: null\n    }\n  }\n\n  constructor () {\n    super()\n\n    this.sandbox = this.configureSandbox()\n  }\n\n  configureSandbox = () => {\n    return {\n      app: {\n        setAuthState: authState => {\n          this.setState({\n            ...this.state,\n            auth: authState\n          })\n        },\n      \n        setAuthStatus: authStatus => {\n          this.sandbox.app.setAuthState({\n            ...this.state.auth,\n            isAuthenticated: authStatus\n          })\n        },\n      \n        setSessionToken: token => {\n          this.sandbox.app.setAuthState({\n            ...this.state.auth,\n            sessionToken: token\n          })\n        },\n      \n        setUser: user => {\n          this.sandbox.app.setAuthState({\n            ...this.state.auth,\n            user\n          })\n        }\n      },\n      state: this.state,\n      auth,\n      ajax\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const session = await Auth.currentSession()\n      this.sandbox.app.setAuthStatus(true)\n\n      const user = await Auth.currentAuthenticatedUser()\n\n      await user.getSession((err, session) => {\n        if (!session.isValid()) {\n          console.log(\"no session\")\n        } else {\n          this.sandbox.app.setSessionToken(session.getIdToken().getJwtToken())\n        }\n      })\n\n      this.sandbox.app.setUser(user)\n    } catch (error) {\n      console.log(error)\n      this.sandbox.app.setAuthState({\n        isAuthenticated: false,\n        // isAuthenticating: true,\n        user: null,\n        sessionToken: null\n      })\n    }\n\n    this.sandbox.app.setAuthState({\n      ...this.state.auth,\n      isAuthenticating: false\n    })\n  }\n\n  render() {\n    this.sandbox.state = this.state\n    return (\n      !this.state.auth.isAuthenticating && (\n        <BrowserRouter>\n          <div className=\"app\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props => <LoginView {...props} sb={this.sandbox} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={props => <LoginView {...props} sb={this.sandbox} />}\n              />\n\n              <Route\n                exact\n                path=\"/forgotpassword\"\n                render={props => <ForgotPassword {...props} sb={this.sandbox} />}\n              />\n              <Route\n                exact\n                path=\"/verifyforgottenpassword\"\n                render={props => (\n                  <VerifyForgottenPassword {...props} sb={this.sandbox} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/register\"\n                render={props => <RegisterView {...props} sb={this.sandbox} />}\n              />\n              <Route\n                exact\n                path=\"/register/success\"\n                render={props => (\n                  <VerifyRegistrationView {...props} sb={this.sandbox} />\n                )}\n              />\n\n              <Route\n                exact\n                path=\"/projects\"\n                render={props => <ProjectsView {...props} sb={this.sandbox} />}\n              />\n              <Route\n                exact\n                path=\"/projects/:id\"\n                render={props => <ProjectView {...props} sb={this.sandbox} />}\n              />\n              {/* <Route exact path='/projects/:id' render={ (props) => <ProjectView {...props} sb={this.sandbox} /> }/> */}\n              <Route\n                exact\n                path=\"/projects/:id/edit/:fileId\"\n                render={props => <EditorView {...props} sb={this.sandbox} />}\n              />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      )\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/index.css';\nimport App from './App';\n\nimport Amplify from 'aws-amplify'\nimport config from './config'\n\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n        mandatorySignId: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    }\n})\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}